name: Flutter

on:
  push:
    branches: [ "develop", "flutter_ci" ,"flutter_ci_test" ]
  pull_request:
    branches: [ "develop", "flutter_ci", "flutter_ci_test" ]
jobs:
  analyze:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Install dependencies
        run: |
          cd flutter_sirius_map
          flutter pub get
          flutter gen-l10n 
      - name: Analyze project source
        run: flutter analyze
      - name: Format check
        run: dart format . --set-exit-if-changed
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Install dependencies
        run: |
          cd flutter_sirius_map
          flutter pub get
          flutter gen-l10n 
      - name: Run tests
        run: |
          cd flutter_sirius_map
          flutter test
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Install dependencies
        run: |
          cd flutter_sirius_map
          flutter pub get
          flutter gen-l10n 
      - name: Flutter build android
        run: |
          cd flutter_sirius_map
          flutter build apk
  build-ios:
    runs-on: macos-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Install dependencies
        run: |
          cd flutter_sirius_map
          flutter pub get
          flutter gen-l10n 
      - name: Flutter build ios
        run: |
          cd flutter_sirius_map
          cd ios 
          pod install
          cd ..
          flutter build ios --no-codesign
    
      - name: Set Env Artifact 
        run: |
          cd flutter_sirius_map
          cd ${{ env.main_project_module }}/build/outputs/bundle/release/
          files=(*)
          echo "generated_name_aab=${files[0]%.*}" >> $GITHUB_ENV

      - name: Build APK(s) Release from bundle using bundletool (Path same with bundle output)
        run: |
          cd flutter_sirius_map
          java -jar ".github/lib/bundletool.jar" build-apks --bundle=${{ env.main_project_module }}/build/outputs/bundle/release/${{ env.generated_name_aab }}.aab --output=${{ env.main_project_module }}/build/outputs/bundle/release/${{ env.generated_name_aab }}.apks --mode=universal --ks="app/${{ env.ks_path }}" --ks-pass=pass:${{ env.ks_store_pass }} --ks-key-alias=${{ env.ks_alias }} --key-pass=pass:${{ env.ks_alias_pass }}

      - name: Duplicate APK(s) Release to zip file and extract
        run: |
          cd flutter_sirius_map
          cd ${{ env.main_project_module }}/build/outputs/bundle/release/
          unzip -p ${{ env.generated_name_aab }}.apks universal.apk > ${{ env.generated_name_aab }}.apk

      - name: Upload APK Debug - ${{ env.repository_name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) debug generated
          path: ${{ env.main_project_module }}/build/outputs/apk/debug/

      - name: Upload APK Release - ${{ env.repository_name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) release generated
          path: ${{ env.main_project_module }}/build/outputs/apk/release/

      - name: Upload AAB (App Bundle) Release - ${{ env.repository_name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - App bundle(s) AAB release generated
          path: ${{ env.main_project_module }}/build/outputs/bundle/release/
